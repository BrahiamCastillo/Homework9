// <auto-generated />
using System;
using Homework9.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Homework9.Migrations
{
    [DbContext(typeof(vaccinesContext))]
    [Migration("20210401164600_seed_bloods")]
    partial class seed_bloods
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Homework9.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<int>("SangreId")
                        .HasColumnName("Sangre_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasColumnType("varchar(25)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnName("cedula")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnName("correo")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<sbyte>("Covid")
                        .HasColumnName("covid")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnName("direccion")
                        .HasColumnType("varchar(45)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnName("fecha_nacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Justificacion")
                        .IsRequired()
                        .HasColumnName("justificacion")
                        .HasColumnType("varchar(100)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<double>("Latitud")
                        .HasColumnName("latitud")
                        .HasColumnType("double");

                    b.Property<double>("Longitud")
                        .HasColumnName("longitud")
                        .HasColumnType("double");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnName("provincia")
                        .HasColumnType("varchar(15)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnName("telefono")
                        .HasColumnType("varchar(10)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("Id", "SangreId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex("SangreId")
                        .HasName("fk_Persona_Sangre_idx");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Homework9.Models.Sangre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11)");

                    b.Property<string>("TipoSangre")
                        .IsRequired()
                        .HasColumnName("tipo_sangre")
                        .HasColumnType("varchar(10)")
                        .HasAnnotation("MySql:CharSet", "utf8mb4")
                        .HasAnnotation("MySql:Collation", "utf8mb4_0900_ai_ci");

                    b.HasKey("Id");

                    b.ToTable("Sangre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TipoSangre = "O+"
                        },
                        new
                        {
                            Id = 2,
                            TipoSangre = "O-"
                        },
                        new
                        {
                            Id = 3,
                            TipoSangre = "A+"
                        },
                        new
                        {
                            Id = 4,
                            TipoSangre = "A-"
                        },
                        new
                        {
                            Id = 5,
                            TipoSangre = "B+"
                        },
                        new
                        {
                            Id = 6,
                            TipoSangre = "B-"
                        },
                        new
                        {
                            Id = 7,
                            TipoSangre = "AB+"
                        },
                        new
                        {
                            Id = 8,
                            TipoSangre = "AB-"
                        });
                });

            modelBuilder.Entity("Homework9.Models.Persona", b =>
                {
                    b.HasOne("Homework9.Models.Sangre", "Sangre")
                        .WithMany("Persona")
                        .HasForeignKey("SangreId")
                        .HasConstraintName("fk_Persona_Sangre")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
